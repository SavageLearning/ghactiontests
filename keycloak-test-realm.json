{
    "accessCodeLifespan": 60,
    "accessCodeLifespanLogin": 1800,
    "accessCodeLifespanUserAction": 300,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "adminEventsDetailsEnabled": false,
    "adminEventsEnabled": true,
    "attributes": {
      "cibaAuthRequestedUserHint": "login_hint",
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaInterval": "5",
      "clientOfflineSessionIdleTimeout": "0",
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "parRequestUriLifespan": "60",
      "realmReusableOtpCode": "false"
    },
    "authenticationFlows": [
      {
        "alias": "Account verification options",
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "priority": 20,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Method with which to verity the existing account",
        "id": "96aa22d8-8e04-4bc0-88c0-d34f043a443b",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Authentication Options",
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "DISABLED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 30,
            "requirement": "DISABLED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Authentication options.",
        "id": "4ac40aa8-498f-4807-9c6a-1328ba55e80a",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Browser - Conditional OTP",
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Flow to determine if the OTP is required for the authentication",
        "id": "6e8be746-9e73-4112-916c-a22f98f86a0f",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Direct Grant - Conditional OTP",
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Flow to determine if the OTP is required for the authentication",
        "id": "e2bb557a-3587-46a2-b2f0-a1fe42aed0e8",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "First broker login - Conditional OTP",
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Flow to determine if the OTP is required for the authentication",
        "id": "cffb4ed1-dd72-42dc-8284-ffb148795798",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Handle Existing Account",
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "id": "e5d9c62c-d330-4b59-9687-0ebeacf6e541",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Reset - Conditional OTP",
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "id": "1c96ba23-c58b-4f96-a56a-67aa837d4f85",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "User creation or linking",
        "authenticationExecutions": [
          {
            "authenticator": "idp-create-user-if-unique",
            "authenticatorConfig": "create unique user config",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "priority": 20,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Flow for the existing/non-existing user alternatives",
        "id": "086ce6fe-9447-4a45-ad73-950f3bba9207",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "Verify Existing Account by Re-authentication",
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "priority": 20,
            "requirement": "CONDITIONAL",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Reauthentication of existing account",
        "id": "323bd495-722b-4570-8ed1-adb7c3af5117",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "browser",
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "DISABLED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 25,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "priority": 30,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "browser based authentication",
        "id": "972ec7c0-e322-41a8-b140-ab9c8565557a",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "clients",
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 30,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 40,
            "requirement": "ALTERNATIVE",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Base authentication for clients",
        "id": "ff9ad57c-b74e-4bb1-a5dc-ba877b7dda74",
        "providerId": "client-flow",
        "topLevel": true
      },
      {
        "alias": "direct grant",
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "priority": 30,
            "requirement": "CONDITIONAL",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "OpenID Connect Resource Owner Grant",
        "id": "6ad464db-ba4f-4c56-b88f-11398e9a46be",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "docker auth",
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Used by Docker clients to authenticate against the IDP",
        "id": "96b19a8e-57c3-4ad4-a1f3-167141dc06bb",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "first broker login",
        "authenticationExecutions": [
          {
            "authenticator": "idp-review-profile",
            "authenticatorConfig": "review profile config",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "id": "9d5fa324-f812-41f6-9f65-d3d8708194d1",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "forms",
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "priority": 20,
            "requirement": "CONDITIONAL",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Username, password, otp and other auth forms.",
        "id": "6c0612e7-3611-4c9d-b05d-bed39da57e8e",
        "providerId": "basic-flow",
        "topLevel": false
      },
      {
        "alias": "http challenge",
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Authentication Options",
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "id": "dcdf65c0-119b-4937-b327-f79510cc659f",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "registration",
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "registration flow",
        "id": "a5247f3a-6586-4ee6-a208-017115cd69d6",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "registration form",
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 40,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 50,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 60,
            "requirement": "DISABLED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "registration form",
        "id": "5325b850-5953-4d87-a767-51df3554aa8a",
        "providerId": "form-flow",
        "topLevel": false
      },
      {
        "alias": "reset credentials",
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 20,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 30,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "priority": 40,
            "requirement": "CONDITIONAL",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "Reset credentials for a user if they forgot their password or something",
        "id": "5bf140b8-5baf-4013-a320-93f83d8f1009",
        "providerId": "basic-flow",
        "topLevel": true
      },
      {
        "alias": "saml ecp",
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "autheticatorFlow": false,
            "priority": 10,
            "requirement": "REQUIRED",
            "userSetupAllowed": false
          }
        ],
        "builtIn": true,
        "description": "SAML ECP Profile Authentication Flow",
        "id": "23321a6f-949f-412f-a299-3afa3a8425af",
        "providerId": "basic-flow",
        "topLevel": true
      }
    ],
    "authenticatorConfig": [
      {
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        },
        "id": "b67241e2-7571-47f1-b27b-1be9acc33e6c"
      },
      {
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        },
        "id": "e132773c-be4f-4be2-b3c1-d72b85655c57"
      }
    ],
    "browserFlow": "browser",
    "browserSecurityHeaders": {
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "contentSecurityPolicyReportOnly": "",
      "referrerPolicy": "no-referrer",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains",
      "xContentTypeOptions": "nosniff",
      "xFrameOptions": "SAMEORIGIN",
      "xRobotsTag": "none",
      "xXSSProtection": "1; mode=block"
    },
    "bruteForceProtected": false,
    "clientAuthenticationFlow": "clients",
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "clientPolicies": {
      "policies": []
    },
    "clientProfiles": {
      "profiles": []
    },
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clientScopes": [
      {
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "description": "OpenID Connect built-in scope: offline_access",
        "id": "0061ff89-5322-47f4-b091-62ce1822e369",
        "name": "offline_access",
        "protocol": "openid-connect"
      },
      {
        "attributes": {
          "display.on.consent.screen": "false",
          "include.in.token.scope": "true"
        },
        "description": "Microprofile - JWT built-in scope",
        "id": "6b06f007-b66c-4fb0-9973-e1ba43a0d20c",
        "name": "microprofile-jwt",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "upn",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "username",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "bce84955-9d7f-42ce-ae79-681797a5731a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "groups",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "multivalued": "true",
              "user.attribute": "foo",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "a04213a8-b793-4f43-a68a-5349e334bd67",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true",
          "include.in.token.scope": "true"
        },
        "description": "OpenID Connect built-in scope: profile",
        "id": "07fca8e4-13e2-48cf-8c45-cd6c6967fb04",
        "name": "profile",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "website",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "website",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "24107cc4-8acd-4e54-a72a-987fb58ff3dc",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "nickname",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "nickname",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "596f2cf9-cd23-4def-b1b7-f7425aed2a90",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "gender",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "gender",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "941a2a36-ddfb-4144-8442-e2e6ae3e0b55",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "locale",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "locale",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "d2fec730-21ff-4597-9dad-e086bf85b810",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "picture",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "picture",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "51840a16-c245-4b01-a4fa-79c1f98d4084",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "username",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "2843168c-03e5-495b-9e83-b62b0f5eb08a",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "birthdate",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "a3e58d4c-21b2-45f3-a611-964f5cd5609a",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "middleName",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "9c12f1af-d734-4d34-98fe-4038e0ad3b09",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "profile",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "profile",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "e7e9d3f7-2aeb-49f3-8f2f-e2e09b161e6b",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "family_name",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "lastName",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "d42e3a6b-1ebd-4c6c-8a47-9d96fc7cc771",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "updatedAt",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "d94a65b7-ca74-4b18-8633-fff4deaed90e",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "id.token.claim": "true",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "2ec42b23-1895-49c1-91ea-6b521edd490a",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "given_name",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "firstName",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "9cfd4172-6697-430f-895c-eea91f8a9290",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "zoneinfo",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "25c09f16-d383-42e9-b4fc-da85edb688ca",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true",
          "include.in.token.scope": "true"
        },
        "description": "OpenID Connect built-in scope: email",
        "id": "3d0d5f1a-d1c3-4bfc-8953-9bd831786bec",
        "name": "email",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "id.token.claim": "true",
              "jsonType.label": "boolean",
              "user.attribute": "emailVerified",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "21c6e98c-1625-4065-baf5-2220d68597b9",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "email",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "email",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "5e65aa3e-8b7d-4a98-a831-2fb0951421b1",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "",
          "display.on.consent.screen": "false",
          "include.in.token.scope": "false"
        },
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "id": "23027b7b-2eea-4971-af3b-d545e72b9d9f",
        "name": "web-origins",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {},
            "consentRequired": false,
            "id": "642197f5-9d3d-4a78-b105-4630269bf63a",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true",
          "include.in.token.scope": "true"
        },
        "description": "OpenID Connect built-in scope: address",
        "id": "6eb4f33a-a139-4e26-ab74-2f8a977cec8c",
        "name": "address",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "id.token.claim": "true",
              "user.attribute.country": "country",
              "user.attribute.formatted": "formatted",
              "user.attribute.locality": "locality",
              "user.attribute.postal_code": "postal_code",
              "user.attribute.region": "region",
              "user.attribute.street": "street",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "0b80f9be-5e15-45b3-bcb1-ad16abe8e205",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true",
          "include.in.token.scope": "false"
        },
        "description": "OpenID Connect scope for add user roles to the access token",
        "id": "374f54f8-5127-4ab4-b844-ce7353893f2b",
        "name": "roles",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true",
              "user.attribute": "foo"
            },
            "consentRequired": false,
            "id": "9d2ed9f5-d25d-4df0-be0a-358a50fc45f6",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "role",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "usermodel.clientRoleMapping.clientId": "solid-client"
            },
            "consentRequired": false,
            "id": "ecaa4f29-bfd4-4a5d-bd93-d38bd66fbeca",
            "name": "test-role",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true",
              "user.attribute": "foo"
            },
            "consentRequired": false,
            "id": "8d0c7e64-38c4-455e-8f6b-f84f52af24e0",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper"
          },
          {
            "config": {},
            "consentRequired": false,
            "id": "fa4ff83f-0303-4c4c-b671-041be75b8c6e",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "id.token.claim": "true",
              "included.client.audience": "solid-client",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "d6563e00-a0f5-4878-b058-a9bcbd3d5a1d",
            "name": "some-audience",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true",
          "include.in.token.scope": "true"
        },
        "description": "OpenID Connect built-in scope: phone",
        "id": "6d3d3826-900b-4e6a-83e9-5092d34b06a4",
        "name": "phone",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "id.token.claim": "true",
              "jsonType.label": "boolean",
              "user.attribute": "phoneNumberVerified",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "513505a2-7ca8-46f3-84a7-59952d4f35fe",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "phoneNumber",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "5b0f2f66-481c-4abd-9d49-d8b11d120c51",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          }
        ]
      },
      {
        "attributes": {
          "display.on.consent.screen": "false",
          "include.in.token.scope": "false"
        },
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "id": "82830b69-2144-421e-864d-e36876aeb726",
        "name": "acr",
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "id.token.claim": "true",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "13d549fd-5252-4c6d-9858-14d888d0bd19",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper"
          }
        ]
      },
      {
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "description": "SAML role list",
        "id": "e7c79004-72a4-44de-831e-5174212afdbb",
        "name": "role_list",
        "protocol": "saml",
        "protocolMappers": [
          {
            "config": {
              "attribute.name": "Role",
              "attribute.nameformat": "Basic",
              "single": "false"
            },
            "consentRequired": false,
            "id": "ce66a884-9f6a-4962-9cd1-dfe65c628fd6",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper"
          }
        ]
      }
    ],
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clients": [
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "baseUrl": "/realms/test/account/",
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "account",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": false,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "e5dbb6ff-bbe0-43fb-ac46-4acb3e25f240",
        "implicitFlowEnabled": false,
        "name": "${client_account}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "publicClient": true,
        "redirectUris": [
          "/realms/test/account/*"
        ],
        "rootUrl": "${authBaseUrl}",
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": []
      },
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "pkce.code.challenge.method": "S256",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "baseUrl": "/realms/test/account/",
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "account-console",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": false,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "09c33f6e-86f2-4113-b5c7-16d5ef092637",
        "implicitFlowEnabled": false,
        "name": "${client_account-console}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {},
            "consentRequired": false,
            "id": "df7f4c99-8a39-4c46-93e7-e3c28b7d95df",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper"
          }
        ],
        "publicClient": true,
        "redirectUris": [
          "/realms/test/account/*"
        ],
        "rootUrl": "${authBaseUrl}",
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": []
      },
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "admin-cli",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": true,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "0e2aec4e-fa86-4dad-b6c3-a7ec5b765bb5",
        "implicitFlowEnabled": false,
        "name": "${client_admin-cli}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "publicClient": true,
        "redirectUris": [],
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": false,
        "surrogateAuthRequired": false,
        "webOrigins": []
      },
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "bearerOnly": true,
        "clientAuthenticatorType": "client-secret",
        "clientId": "broker",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": false,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "ad3592d3-eca4-437c-9d70-926b2885fa3a",
        "implicitFlowEnabled": false,
        "name": "${client_broker}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "publicClient": false,
        "redirectUris": [],
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": []
      },
      {
        "adminUrl": "http://localhost:3000",
        "alwaysDisplayInConsole": false,
        "attributes": {
          "acr.loa.map": "{}",
          "backchannel.logout.revoke.offline.tokens": "false",
          "backchannel.logout.session.required": "true",
          "client.secret.creation.time": "1651443945",
          "client_credentials.use_refresh_token": "false",
          "display.on.consent.screen": "false",
          "exclude.session.state.from.auth.response": "false",
          "frontchannel.logout.session.required": "false",
          "id.token.as.detached.signature": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "oidc.ciba.grant.enabled": "false",
          "post.logout.redirect.uris": "+",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.artifact.binding": "false",
          "saml.assertion.signature": "false",
          "saml.authnstatement": "false",
          "saml.client.signature": "false",
          "saml.encrypt": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.onetimeuse.condition": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "token.response.type.bearer.lower-case": "false",
          "use.refresh.tokens": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "baseUrl": "/login/generic_oauth",
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "grafana.localhost",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": true,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "2e91567f-3517-47c9-9293-f114b4606724",
        "implicitFlowEnabled": false,
        "nodeReRegistrationTimeout": -1,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "roles",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "usermodel.clientRoleMapping.clientId": "grafana.localhost"
            },
            "consentRequired": false,
            "id": "2c461979-af98-4b2f-b01a-774f8e1c691e",
            "name": "Roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper"
          }
        ],
        "publicClient": false,
        "redirectUris": [
          "http://localhost:3000/*"
        ],
        "rootUrl": "http://localhost:3000",
        "secret": "**********",
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": [
          "http://localhost:3000"
        ]
      },
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "bearerOnly": true,
        "clientAuthenticatorType": "client-secret",
        "clientId": "realm-management",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": false,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
        "implicitFlowEnabled": false,
        "name": "${client_realm-management}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "publicClient": false,
        "redirectUris": [],
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": []
      },
      {
        "alwaysDisplayInConsole": false,
        "attributes": {
          "pkce.code.challenge.method": "S256",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "baseUrl": "/admin/test/console/",
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "security-admin-console",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "directAccessGrantsEnabled": false,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": false,
        "id": "98c64beb-15e4-4a61-86e1-76bcc085ba2c",
        "implicitFlowEnabled": false,
        "name": "${client_security-admin-console}",
        "nodeReRegistrationTimeout": 0,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "locale",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.attribute": "locale",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "49e19b5f-7522-46a5-8581-da8b382939ec",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper"
          }
        ],
        "publicClient": true,
        "redirectUris": [
          "/admin/test/console/*"
        ],
        "rootUrl": "${authAdminUrl}",
        "serviceAccountsEnabled": false,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": [
          "+"
        ]
      },
      {
        "adminUrl": "",
        "alwaysDisplayInConsole": false,
        "attributes": {
          "acr.loa.map": "{}",
          "backchannel.logout.revoke.offline.tokens": "false",
          "backchannel.logout.session.required": "true",
          "client.secret.creation.time": "1690773977",
          "client_credentials.use_refresh_token": "false",
          "display.on.consent.screen": "false",
          "exclude.session.state.from.auth.response": "false",
          "frontchannel.logout.session.required": "false",
          "id.token.as.detached.signature": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "oidc.ciba.grant.enabled": "false",
          "post.logout.redirect.uris": "+",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.artifact.binding": "false",
          "saml.assertion.signature": "false",
          "saml.authnstatement": "false",
          "saml.client.signature": "false",
          "saml.encrypt": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.onetimeuse.condition": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "token.response.type.bearer.lower-case": "false",
          "use.refresh.tokens": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "authorizationServicesEnabled": true,
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "decisionStrategy": "UNANIMOUS",
          "policies": [
            {
              "config": {
                "roles": "[{\"id\":\"solid-client/BASIC_GUY\",\"required\":false},{\"id\":\"solid-client/ADMIN\",\"required\":false}]"
              },
              "decisionStrategy": "UNANIMOUS",
              "description": "",
              "id": "ebd9a745-54d8-4948-b0db-86aeee3f537b",
              "logic": "POSITIVE",
              "name": "test-policy",
              "type": "role"
            }
          ],
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "_id": "5e688aa4-ebaa-496f-af65-ab4d3a9142be",
              "attributes": {},
              "name": "Default Resource",
              "ownerManagedAccess": false,
              "type": "urn:solid-client:resources:default",
              "uris": [
                "/*"
              ]
            }
          ],
          "scopes": []
        },
        "baseUrl": "",
        "bearerOnly": false,
        "clientAuthenticatorType": "client-secret",
        "clientId": "solid-client",
        "consentRequired": false,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "description": "",
        "directAccessGrantsEnabled": true,
        "enabled": true,
        "frontchannelLogout": false,
        "fullScopeAllowed": true,
        "id": "3ea2070d-e59d-4b6d-a337-f4c60ea3d663",
        "implicitFlowEnabled": false,
        "name": "",
        "nodeReRegistrationTimeout": -1,
        "notBefore": 0,
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "protocol": "openid-connect",
        "protocolMappers": [
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "client_id",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.session.note": "client_id",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "fce546c4-a312-4d0c-9736-4da10c886304",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "bbf79943-64a5-482c-8d37-8f464fb1d770",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper"
          },
          {
            "config": {
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "id.token.claim": "true",
              "jsonType.label": "String",
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true"
            },
            "consentRequired": false,
            "id": "f4c8c13c-2730-4b79-bbf0-cc180b59ae84",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper"
          }
        ],
        "publicClient": false,
        "redirectUris": [
          "https://localhost:5001/*",
          "http://localhost:5203/*",
          "http://localhost:8000/*",
          "https://oauth.pstmn.io/v1/callback"
        ],
        "rootUrl": "http://localhost:8100",
        "secret": "GUZA3qJvtYHCOdeuH2qqCvkJT4mqtlWu",
        "serviceAccountsEnabled": true,
        "standardFlowEnabled": true,
        "surrogateAuthRequired": false,
        "webOrigins": [
          "*"
        ]
      }
    ],
    "components": {
      "org.keycloak.keys.KeyProvider": [
        {
          "config": {
            "algorithm": [
              "RSA-OAEP"
            ],
            "priority": [
              "100"
            ]
          },
          "id": "0a2629ca-d807-4c8f-b188-ab9d3a28ea10",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {}
        },
        {
          "config": {
            "priority": [
              "100"
            ]
          },
          "id": "b8c649b9-ad48-4d12-a6d5-474caed4f692",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {}
        },
        {
          "config": {
            "priority": [
              "100"
            ]
          },
          "id": "b5a3b540-4795-40f6-a5e6-c6d18ff07d7f",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {}
        },
        {
          "config": {
            "algorithm": [
              "HS256"
            ],
            "priority": [
              "100"
            ]
          },
          "id": "7978157c-2e89-461b-aeee-8a1ec5747152",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {}
        }
      ],
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          },
          "id": "b07805e7-ecae-4ea7-af9c-2c91f9b94a6e",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subComponents": {},
          "subType": "anonymous"
        },
        {
          "config": {},
          "id": "ecb2d416-14f5-48d0-b2de-bb21915f3d5c",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subComponents": {},
          "subType": "anonymous"
        },
        {
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "saml-role-list-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          },
          "id": "90fb8ee6-38b3-427e-a2bd-b7f396a40762",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subComponents": {},
          "subType": "authenticated"
        },
        {
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          },
          "id": "08172b86-af33-4298-86ce-9f99ac6b9e3b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subComponents": {},
          "subType": "authenticated"
        },
        {
          "config": {},
          "id": "60d0ac3d-b9b1-4db1-b506-e2c2370fb26a",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subComponents": {},
          "subType": "anonymous"
        },
        {
          "config": {
            "client-uris-must-match": [
              "true"
            ],
            "host-sending-registration-request-must-match": [
              "true"
            ]
          },
          "id": "977fac87-f75a-43b3-a120-e68f51f4221c",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subComponents": {},
          "subType": "anonymous"
        },
        {
          "config": {
            "max-clients": [
              "200"
            ]
          },
          "id": "957f7964-8700-45b2-a3ce-d4f26684493d",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subComponents": {},
          "subType": "anonymous"
        },
        {
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper"
            ]
          },
          "id": "02e65d97-76a1-4db8-b527-e2861a426101",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subComponents": {},
          "subType": "anonymous"
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "config": {},
          "id": "e4bd085c-1443-4733-a968-49f4549241ab",
          "providerId": "declarative-user-profile",
          "subComponents": {}
        }
      ]
    },
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "defaultRole": {
      "clientRole": false,
      "composite": true,
      "containerId": "test",
      "description": "${role_default-roles}",
      "id": "ba26953a-2b90-4c44-8e0a-89e3f0278e60",
      "name": "default-roles-test"
    },
    "defaultSignatureAlgorithm": "RS256",
    "directGrantFlow": "direct grant",
    "dockerAuthenticationFlow": "docker auth",
    "duplicateEmailsAllowed": false,
    "editUsernameAllowed": false,
    "enabled": true,
    "enabledEventTypes": [
      "SEND_RESET_PASSWORD",
      "UPDATE_CONSENT_ERROR",
      "GRANT_CONSENT",
      "VERIFY_PROFILE_ERROR",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "UPDATE_TOTP",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
      "RESTART_AUTHENTICATION",
      "IMPERSONATE",
      "UPDATE_PROFILE_ERROR",
      "LOGIN",
      "OAUTH2_DEVICE_VERIFY_USER_CODE",
      "UPDATE_PASSWORD_ERROR",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "TOKEN_EXCHANGE",
      "AUTHREQID_TO_TOKEN",
      "LOGOUT",
      "REGISTER",
      "DELETE_ACCOUNT_ERROR",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "DELETE_ACCOUNT",
      "UPDATE_PASSWORD",
      "CLIENT_DELETE",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "CLIENT_DELETE_ERROR",
      "VERIFY_EMAIL",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "EXECUTE_ACTIONS",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "SEND_VERIFY_EMAIL",
      "OAUTH2_DEVICE_AUTH",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "OAUTH2_DEVICE_CODE_TO_TOKEN",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
      "UPDATE_EMAIL",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "CLIENT_UPDATE_ERROR",
      "AUTHREQID_TO_TOKEN_ERROR",
      "UPDATE_PROFILE",
      "CLIENT_REGISTER_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "SEND_IDENTITY_PROVIDER_LINK",
      "SEND_VERIFY_EMAIL_ERROR",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "OAUTH2_DEVICE_AUTH_ERROR",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "VERIFY_PROFILE",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "eventsEnabled": true,
    "eventsListeners": [
      "jboss-logging"
    ],
    "failureFactor": 30,
    "groups": [
      {
        "attributes": {},
        "clientRoles": {},
        "id": "49fbd0d1-b610-4de0-924f-7d5a99a454ed",
        "name": "ndlon",
        "path": "/ndlon",
        "realmRoles": [],
        "subGroups": []
      }
    ],
    "id": "test",
    "identityProviderMappers": [],
    "identityProviders": [],
    "internationalizationEnabled": false,
    "keycloakVersion": "22.0.1",
    "loginWithEmailAllowed": true,
    "maxDeltaTimeSeconds": 43200,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "notBefore": 0,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespan": 5184000,
    "offlineSessionMaxLifespanEnabled": false,
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyCodeReusable": false,
    "otpPolicyDigits": 6,
    "otpPolicyInitialCounter": 0,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyType": "totp",
    "otpSupportedApplications": [
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName",
      "totpAppFreeOTPName"
    ],
    "permanentLockout": false,
    "quickLoginCheckMilliSeconds": 1000,
    "realm": "test",
    "refreshTokenMaxReuse": 0,
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "registrationFlow": "registration",
    "rememberMe": true,
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "config": {},
        "defaultAction": false,
        "enabled": true,
        "name": "Configure OTP",
        "priority": 10,
        "providerId": "CONFIGURE_TOTP"
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "config": {},
        "defaultAction": false,
        "enabled": false,
        "name": "Terms and Conditions",
        "priority": 20,
        "providerId": "TERMS_AND_CONDITIONS"
      },
      {
        "alias": "UPDATE_PASSWORD",
        "config": {},
        "defaultAction": false,
        "enabled": true,
        "name": "Update Password",
        "priority": 30,
        "providerId": "UPDATE_PASSWORD"
      },
      {
        "alias": "UPDATE_PROFILE",
        "config": {},
        "defaultAction": false,
        "enabled": true,
        "name": "Update Profile",
        "priority": 40,
        "providerId": "UPDATE_PROFILE"
      },
      {
        "alias": "VERIFY_EMAIL",
        "config": {},
        "defaultAction": false,
        "enabled": true,
        "name": "Verify Email",
        "priority": 50,
        "providerId": "VERIFY_EMAIL"
      },
      {
        "alias": "delete_account",
        "config": {},
        "defaultAction": false,
        "enabled": false,
        "name": "Delete Account",
        "priority": 60,
        "providerId": "delete_account"
      },
      {
        "alias": "update_user_locale",
        "config": {},
        "defaultAction": false,
        "enabled": true,
        "name": "Update User Locale",
        "priority": 1000,
        "providerId": "update_user_locale"
      }
    ],
    "requiredCredentials": [
      "password"
    ],
    "resetCredentialsFlow": "reset credentials",
    "resetPasswordAllowed": true,
    "revokeRefreshToken": false,
    "roles": {
      "client": {
        "account": [
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "e5dbb6ff-bbe0-43fb-ac46-4acb3e25f240",
            "id": "a7f0796f-b43c-42e1-bc27-1e7739736f5e",
            "name": "view-profile"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "e5dbb6ff-bbe0-43fb-ac46-4acb3e25f240",
            "id": "714f7771-4faa-4dff-8b9e-5c0e9691ef0b",
            "name": "manage-account"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "e5dbb6ff-bbe0-43fb-ac46-4acb3e25f240",
            "description": "${role_delete-account}",
            "id": "89cf1a4f-f21d-496c-bf80-b095233df3dd",
            "name": "delete-account"
          }
        ],
        "account-console": [],
        "admin-cli": [],
        "broker": [],
        "grafana.localhost": [
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "2e91567f-3517-47c9-9293-f114b4606724",
            "id": "1f8ce240-0928-4d03-b111-4335192e3ce1",
            "name": "admin"
          }
        ],
        "realm-management": [
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_query-groups}",
            "id": "ad83ed4b-21e0-429f-8291-743b2a50d69f",
            "name": "query-groups"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-authorization}",
            "id": "9449d46c-1676-44dd-8a31-dd807cbe803b",
            "name": "manage-authorization"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "manage-authorization",
                  "view-realm",
                  "view-events",
                  "manage-users",
                  "query-realms",
                  "manage-realm",
                  "view-authorization",
                  "view-identity-providers",
                  "create-client",
                  "view-clients",
                  "query-clients",
                  "query-users",
                  "impersonation",
                  "view-users",
                  "manage-clients",
                  "manage-events",
                  "manage-identity-providers"
                ]
              }
            },
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_realm-admin}",
            "id": "5d5dd0ea-f775-474b-8c91-d8229102dae0",
            "name": "realm-admin"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-realm}",
            "id": "a0fd8945-4931-420b-bd6e-0df2b4fb987c",
            "name": "view-realm"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-events}",
            "id": "8b48f016-52c5-4a77-bebf-5aa8b566e5d5",
            "name": "view-events"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-users}",
            "id": "59a911d1-cfaf-4402-9ba7-b535daabf580",
            "name": "manage-users"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_query-realms}",
            "id": "ed608f74-22cd-44a9-82b1-97b3caa19148",
            "name": "query-realms"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-realm}",
            "id": "644263cf-53cc-460e-9061-6b8b7ecea818",
            "name": "manage-realm"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-authorization}",
            "id": "22298234-2bf6-4792-ae4d-b17b05454546",
            "name": "view-authorization"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-identity-providers}",
            "id": "67dc9d2a-1768-4b74-be02-49a74d9fb6cb",
            "name": "view-identity-providers"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_create-client}",
            "id": "9d020786-cfc8-42d0-a16f-ee356c449032",
            "name": "create-client"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-clients}",
            "id": "978bf637-43c7-4b79-87f1-f71da18b7f03",
            "name": "view-clients"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_query-clients}",
            "id": "68ed9e3e-550e-462d-b4d3-0be1477e4bef",
            "name": "query-clients"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_query-users}",
            "id": "8e8e8957-d38e-414b-848e-a13f9023c3ce",
            "name": "query-users"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_impersonation}",
            "id": "f37df27f-50e6-4bba-a194-b5e7f4262fc9",
            "name": "impersonation"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_view-users}",
            "id": "e9c47cc8-9448-4c53-b252-e801e3f86558",
            "name": "view-users"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-clients}",
            "id": "7a847031-daaa-4e58-944f-61e35b2e6f69",
            "name": "manage-clients"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-events}",
            "id": "874f1280-6df7-4680-b52f-cc4d8ce137e0",
            "name": "manage-events"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "79e440dc-7c4a-45ba-927f-7d82c234ec4e",
            "description": "${role_manage-identity-providers}",
            "id": "a82d2e16-3025-4239-96de-0ad8c865eced",
            "name": "manage-identity-providers"
          }
        ],
        "security-admin-console": [],
        "solid-client": [
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "3ea2070d-e59d-4b6d-a337-f4c60ea3d663",
            "id": "67e964e1-392c-483a-9c8f-f25d5beae628",
            "name": "ADMIN"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "3ea2070d-e59d-4b6d-a337-f4c60ea3d663",
            "id": "bbdcbb63-91ef-4085-afbd-b7793a5e3f31",
            "name": "BASIC_GUY"
          },
          {
            "attributes": {},
            "clientRole": true,
            "composite": false,
            "containerId": "3ea2070d-e59d-4b6d-a337-f4c60ea3d663",
            "id": "ae48d59d-40c3-46ac-97b5-6c8c7339cf24",
            "name": "uma_protection"
          }
        ]
      },
      "realm": [
        {
          "attributes": {},
          "clientRole": false,
          "composite": false,
          "containerId": "test",
          "description": "${role_uma_authorization}",
          "id": "73aa8c48-c980-4bf1-b5a2-69a44522e247",
          "name": "uma_authorization"
        },
        {
          "attributes": {},
          "clientRole": false,
          "composite": false,
          "containerId": "test",
          "id": "52f5989d-606c-4533-ae04-232d2cd179f6",
          "name": "user"
        },
        {
          "attributes": {},
          "clientRole": false,
          "composite": false,
          "containerId": "test",
          "description": "${role_offline-access}",
          "id": "1a796318-262c-43ee-a60b-949c94d50db5",
          "name": "offline_access"
        },
        {
          "attributes": {},
          "clientRole": false,
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ]
          },
          "containerId": "test",
          "description": "${role_default-roles}",
          "id": "ba26953a-2b90-4c44-8e0a-89e3f0278e60",
          "name": "default-roles-test"
        }
      ]
    },
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "smtpServer": {
      "auth": "true",
      "envelopeFrom": "",
      "from": "solid.mano.a.mano@gmail.com",
      "fromDisplayName": "Solid Labor",
      "host": "smtp.gmail.com",
      "password": "**********",
      "port": "587",
      "replyTo": "",
      "replyToDisplayName": "",
      "ssl": "false",
      "starttls": "true",
      "user": "solid.mano.a.mano@gmail.com"
    },
    "sslRequired": "external",
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionMaxLifespanRememberMe": 0,
    "supportedLocales": [],
    "userManagedAccessAllowed": false,
    "users": [
      {
        "clientRoles": {
          "solid-client": [
            "uma_protection"
          ]
        },
        "createdTimestamp": 1690849186486,
        "disableableCredentialTypes": [],
        "emailVerified": false,
        "enabled": true,
        "groups": [],
        "id": "d26c2708-fa40-4db3-9ae3-87eb7aac9970",
        "notBefore": 0,
        "realmRoles": [
          "default-roles-test"
        ],
        "requiredActions": [],
        "serviceAccountClientId": "solid-client",
        "totp": false,
        "username": "service-account-solid-client"
      },
      {
        "access": {
          "impersonate": true,
          "manage": true,
          "manageGroupMembership": true,
          "mapRoles": true,
          "view": true
        },
        "createdTimestamp": 1694034665751,
        "credentials": [
          {
            "temporary": false,
            "type": "password",
            "value": "demo"
          }
        ],
        "disableableCredentialTypes": [],
        "emailVerified": false,
        "enabled": true,
        "firstName": "",
        "id": "aeeec989-bba1-43dc-802f-56c817ddf30a",
        "lastName": "",
        "notBefore": 0,
        "requiredActions": [],
        "totp": false,
        "username": "demo"
      }
    ],
    "verifyEmail": true,
    "waitIncrementSeconds": 60,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicyRpId": "",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyUserVerificationRequirement": "not specified"
  }
